# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Monitoring.V3.Model.ServiceLevelIndicator do
  @moduledoc """
  A Service-Level Indicator (SLI) describes the "performance" of a service. For some services, the SLI is well-defined. In such cases, the SLI can be described easily by referencing the well-known SLI and providing the needed parameters. Alternatively, a "custom" SLI can be defined with a query to the underlying metric store. An SLI is defined to be good_service / total_service over any queried time interval. The value of performance always falls into the range 0 <= performance <= 1. A custom SLI describes how to compute this ratio, whether this is by dividing values from a pair of time series, cutting a Distribution into good and bad counts, or counting time windows in which the service complies with a criterion. For separation of concerns, a single Service-Level Indicator measures performance for only one aspect of service quality, such as fraction of successful queries or fast-enough queries.

  ## Attributes

  *   `basicSli` (*type:* `GoogleApi.Monitoring.V3.Model.BasicSli.t`, *default:* `nil`) - Basic SLI on a well-known service type.
  *   `requestBased` (*type:* `GoogleApi.Monitoring.V3.Model.RequestBasedSli.t`, *default:* `nil`) - Request-based SLIs
  *   `windowsBased` (*type:* `GoogleApi.Monitoring.V3.Model.WindowsBasedSli.t`, *default:* `nil`) - Windows-based SLIs
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :basicSli => GoogleApi.Monitoring.V3.Model.BasicSli.t() | nil,
          :requestBased => GoogleApi.Monitoring.V3.Model.RequestBasedSli.t() | nil,
          :windowsBased => GoogleApi.Monitoring.V3.Model.WindowsBasedSli.t() | nil
        }

  field(:basicSli, as: GoogleApi.Monitoring.V3.Model.BasicSli)
  field(:requestBased, as: GoogleApi.Monitoring.V3.Model.RequestBasedSli)
  field(:windowsBased, as: GoogleApi.Monitoring.V3.Model.WindowsBasedSli)
end

defimpl Poison.Decoder, for: GoogleApi.Monitoring.V3.Model.ServiceLevelIndicator do
  def decode(value, options) do
    GoogleApi.Monitoring.V3.Model.ServiceLevelIndicator.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Monitoring.V3.Model.ServiceLevelIndicator do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
